# Verificação de Situações no Jogo da Velha
 
Este projeto implementa e testa funções para verificar diferentes situações no jogo da velha.
 
## Arquivos

 * **velha.cpp**: Implementação das funções que verificam as condições do jogo.
 * **velha.hpp**: Protótipo as declarações das funções.
 * **testa_velha.cpp**: Arquivo de teste utilizando a biblioteca [Catch2](https://github.com/catchorg/Catch2).
 
## Requisitos
 
 * Compilador C++ com suporte a C++11 ou superior (recomendado: GCC ou Clang).
 * Biblioteca Catch2 para os testes (incluída no arquivo de exemplo).
 
 ## Compilação

 * 1. Certifique-se de que todos os arquivos estão no mesmo diretório:
  - `velha.cpp`
  - `velha.hpp`
  - `testa_velha.cpp`
 
 * 2. Compile o projeto usando o seguinte comando:
 ```
 g++ -std=c++11 -o testa_velha velha.cpp testa_velha.cpp
 ```
 
 Ou utilizando: 
 ```
 make compile
 ```

 ## Execução dos testes
 
 * No terminal, utilize:
  ```
  ./testa_velha
  ```
 
 ## Resultados esperados
 
 * O programa executará os testes definidos em `testa_velha.cpp`. Cada caso de teste avaliará uma situação específica do jogo da velha, como:
   - Vitória do jogador X.
   - Vitória do jogador O.
   - Jogo empatado.
   - Jogo indefinido.
   - Jogo impossível.
 
 ## Resumo das Funções Implementadas
 
 * As funções principais estão em `velha.cpp` e incluem:
   - `tem_espaco_vazio`: Verifica se há espaços vazios no tabuleiro.
   - `vence_diagonal`, `vence_coluna`, `vence_linha`: Verificam as condições de vitória.
   - `verifica_vencedor`: Combina todas as condições de vitória.
   - `x_venceu`, `o_venceu`: Determinam o vencedor (X ou O).
   - `verifica_empate`, `jogo_indefinido`, `jogo_impossivel`: Avaliam diferentes estados do jogo.
   - `VerificaVelha`: Função principal que retorna o estado do jogo com base no tabuleiro.
